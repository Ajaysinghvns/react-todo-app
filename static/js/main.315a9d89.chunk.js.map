{"version":3,"sources":["ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoList","props","className","onClick","onSelect","id","text","App","useState","inputList","setInputList","items","setItems","deleteItems","oldItems","filter","arrElem","index","action","onSubmit","event","preventDefault","type","onChange","target","value","placeholder","autoComplete","required","map","itemVal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAoBeA,EAlBE,SAACC,GAEd,OACI,mCACI,sBAAKC,UAAU,aAAf,UACI,mBAAGA,UAAU,cACT,cAAY,OACZC,QAAS,WACLF,EAAMG,SAASH,EAAMI,KAH7B,eAOA,6BAAKJ,EAAMK,aC4CZC,MArDf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAeMC,EAAc,SAACR,GAGnBO,GAAS,SAACE,GACR,OAAOA,EAASC,QAAO,SAACC,EAASC,GAC/B,OAAOA,IAAUZ,SAMvB,OACE,sBAAKH,UAAU,WAAf,UACG,uBAAMgB,OAAO,IAAIC,SAtBF,SAACC,GACnBA,EAAMC,iBAENT,GAAS,SAACE,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBL,OAEvBC,EAAa,KAgBV,UACA,uBAAOY,KAAK,OAAOC,SA3BN,SAACH,GACjBV,EAAaU,EAAMI,OAAOC,QA0BiBA,MAAOhB,EAAWiB,YAAY,aAAaC,aAAa,MAAMC,UAAQ,IAC9G,0CAEF,sBAAK1B,UAAU,aAAf,UACE,2CAEA,6BAEGS,EAAMkB,KAAK,SAACC,EAASb,GACrB,OAAO,cAAC,EAAD,CAELZ,GAAIY,EACJX,KAAMwB,EACN1B,SAAUS,GAHLI,eClCFc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.315a9d89.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ToDoList = (props) => {\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"todo-style\">\r\n                <i className=\"fa fa-times\" \r\n                    aria-hidden=\"true\" \r\n                    onClick={()=>{\r\n                        props.onSelect(props.id);\r\n                    }} \r\n                \r\n                >x</i>\r\n                <li>{props.text}</li>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToDoList\r\n","import React, {useState} from 'react'\nimport './App.css';\nimport ToDoList from './ToDoList';\n\n\nfunction App() {\n  const [inputList, setInputList] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  const itemEvent = (event) => {\n    setInputList(event.target.value);\n  };\n\n  const listOfItems = (event) =>{\n    event.preventDefault();\n\n    setItems((oldItems)=>{\n      return [...oldItems, inputList];\n    });\n    setInputList(\"\");\n  };  \n\n  const deleteItems = (id) => {\n    // console.log('deleted');\n\n    setItems((oldItems)=>{\n      return oldItems.filter((arrElem, index)=>{\n        return index !== id ;\n      })\n    })\n    // alert(\"Deleted item is : \"+(id+1));\n  }\n\n  return (\n    <div className=\"main_div\">\n       <form action=\"#\" onSubmit={listOfItems}>\n       <input type=\"text\" onChange={itemEvent} value={inputList} placeholder=\"Add a Item\" autoComplete=\"off\" required />\n       <button>+</button>\n       </form>\n     <div className=\"center_div\">\n       <h1>ToDo List</h1>\n      \n       <ol>\n         {/* <li>{inputList}</li> */}\n        { items.map( (itemVal, index)=>{\n          return <ToDoList \n            key={index} \n            id={index}\n            text={itemVal}\n            onSelect={deleteItems}\n            />;\n         })}\n       </ol>\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}